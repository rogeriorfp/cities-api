plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "7.14.0"
}

def applicationProperties = new Properties()
def applicationPropertiesFile = rootProject.file('src/main/resources/application.properties')
if (applicationPropertiesFile.exists()) {
    applicationPropertiesFile.withReader('UTF-8') { reader ->
        applicationProperties.load(reader)
    }
}


flyway {
	url = applicationProperties.getProperty('spring.datasource.url')
	user = applicationProperties.getProperty('spring.datasource.username')
	password = applicationProperties.getProperty('spring.datasource.password')
}

group = 'com.github.rogeriorfp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql'
	implementation 'com.vladmihalcea:hibernate-types-52:2.9.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-devtools'
}

test {
	useJUnitPlatform()
}
